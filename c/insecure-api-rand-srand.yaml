rules:
  - id: raptor-insecure-api-rand-srand
    metadata:
      author: Marco Ivaldi <raptor@0xdeadbeef.info>
      references:
        - https://cwe.mitre.org/data/definitions/338
        - https://cwe.mitre.org/data/definitions/330
        - https://www.sei.cmu.edu/downloads/sei-cert-c-coding-standard-2016-v01.pdf
      confidence: HIGH
      # NOTE: rand_r() and other non-standard PRNGs are not covered.
      # NOTE: improperly seeded strong PRNGs are not covered.
    message: >-
      The software uses a Pseudo-Random Number Generator (PRNG) in a
      security context, but the PRNG's algorithm is not cryptographically
      strong.
      When a non-cryptographic PRNG is used in a cryptographic context, it
      can expose the cryptography to certain types of attacks.
      Often a pseudo-random number generator (PRNG) is not designed for
      cryptography. Sometimes a mediocre source of randomness is sufficient
      or preferable for algorithms that use random numbers. Weak generators
      generally take less processing power and/or do not use the precious,
      finite, entropy sources on a system. While such PRNGs might have very
      useful features, these same features could be used to break the
      cryptography.
    severity: WARNING
    languages:
      - c
      - cpp
    pattern-either:
      - pattern: rand(...)
      - pattern: srand(...)
