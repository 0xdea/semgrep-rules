rules:
  - id: raptor-unsafe-strlen
    metadata:
      author: Marco Ivaldi <raptor@0xdeadbeef.info>
      references:
        - https://cwe.mitre.org/data/definitions/190
        - https://cwe.mitre.org/data/definitions/680
        - https://github.com/struct/mms
      confidence: MEDIUM
    message: >-
      The software performs a calculation that can produce an integer
      overflow or wraparound, when the logic assumes that the resulting
      value will always be larger than the original value. This can
      introduce other weaknesses when the calculation is used for resource
      management or execution control. When influenced by the size of an 
      input it is often easier to overflow a short than an int.
    severity: WARNING
    languages:
      - c
      - cpp
    pattern-either:
      # signed and unsigned short
      - pattern: (short $LEN) = strlen(...);
      - pattern: (short int $LEN) = strlen(...);
      - pattern: (unsigned short $LEN) = strlen(...);
      - pattern: (unsigned short int $LEN) = strlen(...);
      - pattern: (short $LEN) = wcslen(...);
      - pattern: (short int $LEN) = wcslen(...);
      - pattern: (unsigned short $LEN) = wcslen(...);
      - pattern: (unsigned short int $LEN) = wcslen(...);
      # signed int
        # - pattern: (int $LEN) = strlen(...);
        # - pattern: (int $LEN) = wcslen(...);
